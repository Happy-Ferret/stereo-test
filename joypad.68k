;****************************************************************************
; Joypad button IDs for use with BTST
;****************************************************************************

JOY_UP              equ 0
JOY_DOWN            equ 1
JOY_LEFT            equ 2
JOY_RIGHT           equ 3
JOY_A               equ 6
JOY_B               equ 4
JOY_C               equ 5
JOY_START           equ 7

;****************************************************************************
; InitJoypad
; Initializes the joypad.
;----------------------------------------------------------------------------
; breaks ........ all
;****************************************************************************

InitJoypad:
    clr.w   (JoyHold)                   ; Reset joypad state
    
    move.b  #$40, (IoCtrl1)             ; Set up I/O ports
    move.b  #$40, (IoData1)
    
    rts                                 ; End of subroutine

;****************************************************************************
; ReadJoypad
; Reads the joypad buttons and updates the joypad state.
;----------------------------------------------------------------------------
; breaks ........ d5,d6,d7,a4,a5,a6
;****************************************************************************

ReadJoypad:
    lea     (IoData1), a6
    
    move.b  #$40, (a6)                  ; Read D-pad, B and C
    nop
    nop
    move.b  (a6), d7
    move.b  #$00, (a6)                  ; Read A and Start
    nop
    nop
    move.b  (a6), d6
    
    and.b   #$3F, d7                    ; Put all buttons together
    and.b   #$30, d6
    add.b   d6, d6
    add.b   d6, d6
    or.b    d6, d7
    
    not.b   d7                          ; Make buttons high logic
    
    lea     (JoyHold), a6               ; Update hold/press state
    move.b  (a6), d6
    move.b  d7, (a6)+
    not.b   d6
    and.b   d6, d7
    move.b  d7, (a6)+
    
    rts                                 ; End of subroutine
